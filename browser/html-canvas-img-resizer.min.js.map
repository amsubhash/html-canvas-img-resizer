{"version":3,"sources":["webpack://htmlCanvasImgResizer/webpack/bootstrap","webpack://htmlCanvasImgResizer/./src/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","options","dragCornerBoxSize","cropImageWatcher","cropMaskColor","cropCornerColor","cropCornerLineWidth","imageDiv","document","getElementById","id","Error","containerDiv","createElement","setAttribute","appendChild","imageCanvas","cropCanvas","exportCanvas","topLeftCornerDiv","topRightCornerDiv","bottomRightCornerDiv","bottomLeftCornerDiv","selectionDiv","imageCanvasCtx","getContext","cropCanvasCtx","drawExportCanvas","exportCanvasCtx","dragTopLeft","dragBottomLeft","dragTopRight","dragBottomRight","dragBox","image","Image","imageURL","src","onload","offsetWidth","style","width","offsetHeight","height","addEventListener","mouseUp","mouseMove","drawImage","selection","x","y","w","h","preResizeState","canvasWidth","canvasHeight","setInterval","newWidth","newHeight","xScale","yScale","draw","scaleX","scaleY","toDataURL","mousePrevX","mousePrevY","previousX","previousY","e","mouseX","pageX","offsetLeft","mouseY","pageY","offsetTop","isDraw","Math","abs","clearRect","fillStyle","strokeStyle","lineWidth","fillRect","beginPath","moveTo","lineTo","stroke","top","left","getImage","setImageURL"],"mappings":"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","file":"html-canvas-img-resizer.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","interface Oprions {\n  id: string;\n  imageURL: string;\n  cropMaskColor?: string;\n  cropCornerColor?: string;\n  cropCornerLineWidth?: number;\n  dragCornerBoxSize?: number;\n  cropImageWatcher?: (dataURL: string) => void;\n}\n\ninterface ReturnType {\n  getImage: (dataType?: string) => any;\n  setImageURL: (imageURL: string) => void;\n}\n\nexport default (options: Oprions): ReturnType => {\n  const dragCornerBoxSize = options.dragCornerBoxSize || 20;\n  const cropImageWatcher = options.cropImageWatcher;\n  const cropMaskColor = options.cropMaskColor || 'rgba(0, 0, 0, 0.5)';\n  const cropCornerColor = options.cropCornerColor || 'green';\n  const cropCornerLineWidth = options.cropCornerLineWidth || 5;\n\n  const imageDiv = document.getElementById(options.id);\n  if (!imageDiv) {\n    throw Error('Please provide a valid html element Id to work with');\n  }\n  const containerDiv = document.createElement('div');\n  containerDiv.setAttribute(\n    'style',\n    'width:100%; height:100%; position:relative'\n  );\n  imageDiv.appendChild(containerDiv);\n  const imageCanvas = document.createElement('canvas');\n  imageCanvas.setAttribute(\n    'style',\n    'max-width:100%; max-height:100%; position:absolute; top:0; left:0'\n  );\n  const cropCanvas = document.createElement('canvas');\n  cropCanvas.setAttribute(\n    'style',\n    'max-width:100%; max-height:100%; position:absolute; top:0; left:0'\n  );\n  const exportCanvas = document.createElement('canvas');\n  exportCanvas.setAttribute('style', 'display:none');\n\n  // div for click tracker\n  const topLeftCornerDiv = document.createElement('div');\n  const topRightCornerDiv = document.createElement('div');\n  const bottomRightCornerDiv = document.createElement('div');\n  const bottomLeftCornerDiv = document.createElement('div');\n  const selectionDiv = document.createElement('div');\n  bottomLeftCornerDiv.setAttribute(\n    'style',\n    `position: absolute; width: ${dragCornerBoxSize}px; height: ${dragCornerBoxSize}px; top: 0px; left: 0px; cursor: sw-resize; background: transparent; stroke: transparent;`\n  );\n  bottomRightCornerDiv.setAttribute(\n    'style',\n    `position: absolute; width: ${dragCornerBoxSize}px; height: ${dragCornerBoxSize}px; top: 0px; left: 0px; cursor: se-resize; background: transparent; stroke: transparent;`\n  );\n  topRightCornerDiv.setAttribute(\n    'style',\n    `position: absolute; width: ${dragCornerBoxSize}px; height: ${dragCornerBoxSize}px; top: 0px; left: 0px; cursor: ne-resize; background: transparent; stroke: transparent;`\n  );\n  topLeftCornerDiv.setAttribute(\n    'style',\n    `position: absolute; width: ${dragCornerBoxSize}px; height: ${dragCornerBoxSize}px; top: 0px; left: 0px; cursor: nw-resize; background: transparent; stroke: transparent;`\n  );\n  selectionDiv.setAttribute(\n    'style',\n    `position: absolute; width: ${dragCornerBoxSize}px; height: ${dragCornerBoxSize}px; top: 0px; left: 0px; cursor: all-scroll; background: transparent; stroke: transparent;`\n  );\n\n  containerDiv.appendChild(exportCanvas);\n  containerDiv.appendChild(imageCanvas);\n  containerDiv.appendChild(cropCanvas);\n  containerDiv.appendChild(selectionDiv);\n  containerDiv.appendChild(bottomLeftCornerDiv);\n  containerDiv.appendChild(bottomRightCornerDiv);\n  containerDiv.appendChild(topRightCornerDiv);\n  containerDiv.appendChild(topLeftCornerDiv);\n  const imageCanvasCtx = imageCanvas.getContext('2d');\n  if (!imageCanvasCtx) {\n    throw Error('Not able to create canvas');\n  }\n  const cropCanvasCtx = cropCanvas.getContext('2d');\n  if (!cropCanvasCtx) {\n    throw Error('Not able to create canvas');\n  }\n  const exportCanvasCtx = exportCanvas.getContext('2d');\n  if (!exportCanvasCtx) {\n    throw Error('Not able to create canvas');\n  }\n  let drawExportCanvas: () => void;\n  let dragTopLeft = false;\n  let dragBottomLeft = false;\n  let dragTopRight = false;\n  let dragBottomRight = false;\n  let dragBox = false;\n  const image = new Image();\n  if (options.imageURL) image.src = options.imageURL;\n  // image.crossOrigin = 'anonymous';\n  image.onload = () => {\n    if (imageDiv.offsetWidth === 0) {\n      imageDiv.style.width = image.width + 'px';\n    }\n    if (imageDiv.offsetHeight === 0) {\n      imageDiv.style.height = image.height + 'px';\n    }\n    imageCanvas.width = image.width;\n    imageCanvas.height = image.height;\n    cropCanvas.width = imageCanvas.offsetWidth;\n    cropCanvas.height = imageCanvas.offsetHeight;\n    cropCanvas.addEventListener('mouseup', mouseUp, false);\n    cropCanvas.addEventListener('mousemove', mouseMove, false);\n    imageCanvasCtx.drawImage(image, 0, 0);\n    bottomLeftCornerDiv.addEventListener(\n      'mousedown',\n      () => {\n        dragBottomLeft = true;\n      },\n      false\n    );\n    bottomLeftCornerDiv.addEventListener('mouseup', mouseUp, false);\n    bottomLeftCornerDiv.addEventListener('mousemove', mouseMove, false);\n    topLeftCornerDiv.addEventListener(\n      'mousedown',\n      () => {\n        dragTopLeft = true;\n      },\n      false\n    );\n    topLeftCornerDiv.addEventListener('mouseup', mouseUp, false);\n    topLeftCornerDiv.addEventListener('mousemove', mouseMove, false);\n    topRightCornerDiv.addEventListener(\n      'mousedown',\n      () => {\n        dragTopRight = true;\n      },\n      false\n    );\n    topRightCornerDiv.addEventListener('mouseup', mouseUp, false);\n    topRightCornerDiv.addEventListener('mousemove', mouseMove, false);\n    bottomRightCornerDiv.addEventListener(\n      'mousedown',\n      () => {\n        dragBottomRight = true;\n      },\n      false\n    );\n    bottomRightCornerDiv.addEventListener('mouseup', mouseUp, false);\n    bottomRightCornerDiv.addEventListener('mousemove', mouseMove, false);\n    selectionDiv.addEventListener(\n      'mousedown',\n      () => {\n        dragBox = true;\n      },\n      false\n    );\n    selectionDiv.addEventListener('mouseup', mouseUp, false);\n    selectionDiv.addEventListener('mousemove', mouseMove, false);\n\n    const selection = {\n      x: 0,\n      y: 0,\n      w: imageCanvas.offsetWidth,\n      h: imageCanvas.offsetHeight,\n    };\n\n    let preResizeState = {\n      canvasWidth: imageCanvas.offsetWidth,\n      canvasHeight: imageCanvas.offsetHeight,\n      ...selection,\n    };\n\n    setInterval(() => {\n      const newWidth = imageCanvas.offsetWidth;\n      const newHeight = imageCanvas.offsetHeight;\n      if (\n        preResizeState.canvasHeight != newHeight ||\n        preResizeState.canvasWidth != newWidth\n      ) {\n        const xScale = newWidth / preResizeState.canvasWidth;\n        const yScale = newHeight / preResizeState.canvasHeight;\n\n        preResizeState = {\n          ...selection,\n          canvasHeight: newHeight,\n          canvasWidth: newWidth,\n        };\n        cropCanvas.width = newWidth;\n        cropCanvas.height = newHeight;\n        selection.w *= xScale;\n        selection.h *= yScale;\n        draw();\n      }\n    }, 500);\n\n    drawExportCanvas = () => {\n      const scaleX = image.width / cropCanvas.width;\n      const scaleY = image.height / cropCanvas.height;\n      const x = selection.x * scaleX;\n      const y = selection.y * scaleY;\n      const width = selection.w * scaleX;\n      const height = selection.h * scaleY;\n      exportCanvas.width = width;\n      exportCanvas.height = height;\n      exportCanvasCtx.drawImage(\n        image,\n        x,\n        y,\n        width,\n        height,\n        0,\n        0,\n        width,\n        height\n      );\n      cropImageWatcher && cropImageWatcher(exportCanvas.toDataURL());\n    };\n\n    function mouseUp() {\n      dragTopLeft = dragTopRight = dragBottomLeft = dragBottomRight = dragBox = false;\n    }\n\n    let mousePrevX = 0;\n    let mousePrevY = 0;\n    let previousX = 0;\n    let previousY = 0;\n\n    function mouseMove(e: MouseEvent) {\n      if (!imageDiv) {\n        throw Error('Not able to create canvas');\n      }\n      let mouseX = e.pageX - imageDiv.offsetLeft;\n      let mouseY = e.pageY - imageDiv.offsetTop;\n      let isDraw = false;\n      if (dragTopLeft) {\n        selection.w += selection.x - mouseX;\n        selection.h += selection.y - mouseY;\n        selection.x = mouseX;\n        selection.y = mouseY;\n        isDraw = true;\n      } else if (dragTopRight) {\n        selection.w = Math.abs(selection.x - mouseX);\n        selection.h += selection.y - mouseY;\n        selection.y = mouseY;\n        isDraw = true;\n      } else if (dragBottomLeft) {\n        selection.w += selection.x - mouseX;\n        selection.h = Math.abs(selection.y - mouseY);\n        selection.x = mouseX;\n        isDraw = true;\n      } else if (dragBottomRight) {\n        selection.w = Math.abs(selection.x - mouseX);\n        selection.h = Math.abs(selection.y - mouseY);\n        isDraw = true;\n      } else if (dragBox) {\n        selection.x += mouseX - mousePrevX;\n        selection.y += mouseY - mousePrevY;\n        isDraw = true;\n      }\n      if (isDraw) {\n        if (selection.w < 2 * dragCornerBoxSize) {\n          selection.w = 2 * dragCornerBoxSize;\n          selection.x = previousX;\n        }\n        if (selection.h < 2 * dragCornerBoxSize) {\n          selection.h = 2 * dragCornerBoxSize;\n          selection.y = previousY;\n        }\n        if (selection.x < 0) {\n          selection.x = 0;\n        }\n        if (selection.x + selection.w > cropCanvas.width) {\n          selection.x = cropCanvas.width - selection.w;\n        }\n        if (selection.y < 0) {\n          selection.y = 0;\n        }\n        if (selection.y + selection.h > cropCanvas.height) {\n          selection.y = cropCanvas.height - selection.h;\n        }\n        draw();\n      }\n      mousePrevX = mouseX;\n      mousePrevY = mouseY;\n      previousX = selection.x;\n      previousY = selection.y;\n    }\n\n    function draw() {\n      if (!cropCanvasCtx) {\n        throw Error('Not able to create canvas');\n      }\n      cropCanvasCtx.clearRect(0, 0, cropCanvas.width, cropCanvas.height);\n      cropCanvasCtx.fillStyle = cropMaskColor;\n      cropCanvasCtx.strokeStyle = cropCornerColor;\n      cropCanvasCtx.lineWidth = cropCornerLineWidth;\n      cropCanvasCtx.fillRect(0, 0, cropCanvas.width, cropCanvas.height);\n      cropCanvasCtx.clearRect(\n        selection.x,\n        selection.y,\n        selection.w,\n        selection.h\n      );\n      cropCanvasCtx.beginPath();\n      cropCanvasCtx.moveTo(selection.x, selection.y + dragCornerBoxSize);\n      cropCanvasCtx.lineTo(selection.x, selection.y);\n      cropCanvasCtx.lineTo(selection.x + dragCornerBoxSize, selection.y);\n      cropCanvasCtx.moveTo(\n        selection.x + selection.w - dragCornerBoxSize,\n        selection.y\n      );\n      cropCanvasCtx.lineTo(selection.x + selection.w, selection.y);\n      cropCanvasCtx.lineTo(\n        selection.x + selection.w,\n        selection.y + dragCornerBoxSize\n      );\n      cropCanvasCtx.moveTo(\n        selection.x + selection.w,\n        selection.y + selection.h - dragCornerBoxSize\n      );\n      cropCanvasCtx.lineTo(\n        selection.x + selection.w,\n        selection.y + selection.h\n      );\n      cropCanvasCtx.lineTo(\n        selection.x + selection.w - dragCornerBoxSize,\n        selection.y + selection.h\n      );\n      cropCanvasCtx.moveTo(\n        selection.x + dragCornerBoxSize,\n        selection.y + selection.h\n      );\n      cropCanvasCtx.lineTo(selection.x, selection.y + selection.h);\n      cropCanvasCtx.lineTo(\n        selection.x,\n        selection.y + selection.h - dragCornerBoxSize\n      );\n      cropCanvasCtx.stroke();\n      topLeftCornerDiv.style.top = topRightCornerDiv.style.top =\n        selection.y + 'px';\n      topLeftCornerDiv.style.left = bottomLeftCornerDiv.style.left =\n        selection.x + 'px';\n      topRightCornerDiv.style.left = bottomRightCornerDiv.style.left =\n        selection.x + selection.w - dragCornerBoxSize + 'px';\n      bottomLeftCornerDiv.style.top = bottomRightCornerDiv.style.top =\n        selection.y + selection.h - dragCornerBoxSize + 'px';\n      selectionDiv.style.top = selection.y + 'px';\n      selectionDiv.style.left = selection.x + 'px';\n      selectionDiv.style.width = selection.w + 'px';\n      selectionDiv.style.height = selection.h + 'px';\n      drawExportCanvas();\n    }\n\n    draw();\n  };\n  return {\n    getImage: () => {\n      return exportCanvas.toDataURL();\n    },\n    setImageURL: (imageURL: string) => {\n      image.src = imageURL;\n    },\n  };\n};\n"],"sourceRoot":""}