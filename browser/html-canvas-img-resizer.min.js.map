{"version":3,"sources":["webpack://htmlCanvasImgResizer/webpack/bootstrap","webpack://htmlCanvasImgResizer/./src/create-container.ts","webpack://htmlCanvasImgResizer/./src/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","options","dragCornerBoxSize","cropImageWatcher","cropMaskColor","cropCornerColor","cropCornerLineWidth","checkForContainerResizeMS","undefined","containerId","imageDiv","document","getElementById","Error","containerDiv","createElement","setAttribute","appendChild","imageCanvas","cropCanvas","exportCanvas","topLeftCornerDiv","topRightCornerDiv","bottomRightCornerDiv","bottomLeftCornerDiv","selectionDiv","imageCanvasCtx","getContext","cropCanvasCtx","drawExportCanvas","exportCanvasCtx","checkResizeFunction","dragTopLeft","dragBottomLeft","dragTopRight","dragBottomRight","dragBox","image","Image","imageURL","src","getImageData","cb","args","dataType","imageType","imageQuality","imageMeta","width","height","mime","toBlob","data","toDataURL","onload","imgDivWidth","clientWidth","expectedHeight","style","clientHeight","addEventListener","mouseUp","mouseMove","drawImage","selection","x","y","w","h","preResizeState","canvasWidth","canvasHeight","clearInterval","window","setInterval","newWidth","offsetWidth","newHeight","offsetHeight","xScale","yScale","draw","scaleX","scaleY","imgArg","mousePrevX","mousePrevY","previousX","previousY","e","canvasRect","getBoundingClientRect","mouseX","clientX","mouseY","clientY","isDraw","Math","abs","clearRect","fillStyle","strokeStyle","lineWidth","fillRect","beginPath","moveTo","lineTo","stroke","top","left","getImage","imgArgs","setImageURL","stopResizeCheck"],"mappings":"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","file":"html-canvas-img-resizer.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default (containerId: string, dragCornerBoxSize: number) => {\n  const imageDiv = document.getElementById(containerId);\n  if (!imageDiv) {\n    throw Error('Please provide a valid html element Id to work with');\n  }\n  const containerDiv = document.createElement('div');\n  containerDiv.setAttribute(\n    'style',\n    'width:100%; height:100%; position:relative'\n  );\n  imageDiv.appendChild(containerDiv);\n  const imageCanvas = document.createElement('canvas');\n  imageCanvas.setAttribute(\n    'style',\n    'max-width:100%; max-height:100%; position:absolute; top:0; left:0'\n  );\n  const cropCanvas = document.createElement('canvas');\n  cropCanvas.setAttribute(\n    'style',\n    'max-width:100%; max-height:100%; position:absolute; top:0; left:0'\n  );\n  const exportCanvas = document.createElement('canvas');\n  exportCanvas.setAttribute('style', 'display:none');\n\n  // div for click tracker\n  const topLeftCornerDiv = document.createElement('div');\n  const topRightCornerDiv = document.createElement('div');\n  const bottomRightCornerDiv = document.createElement('div');\n  const bottomLeftCornerDiv = document.createElement('div');\n  const selectionDiv = document.createElement('div');\n  bottomLeftCornerDiv.setAttribute(\n    'style',\n    `position: absolute; width: ${dragCornerBoxSize}px; height: ${dragCornerBoxSize}px; top: 0px; left: 0px; cursor: sw-resize; background: transparent; stroke: transparent;`\n  );\n  bottomRightCornerDiv.setAttribute(\n    'style',\n    `position: absolute; width: ${dragCornerBoxSize}px; height: ${dragCornerBoxSize}px; top: 0px; left: 0px; cursor: se-resize; background: transparent; stroke: transparent;`\n  );\n  topRightCornerDiv.setAttribute(\n    'style',\n    `position: absolute; width: ${dragCornerBoxSize}px; height: ${dragCornerBoxSize}px; top: 0px; left: 0px; cursor: ne-resize; background: transparent; stroke: transparent;`\n  );\n  topLeftCornerDiv.setAttribute(\n    'style',\n    `position: absolute; width: ${dragCornerBoxSize}px; height: ${dragCornerBoxSize}px; top: 0px; left: 0px; cursor: nw-resize; background: transparent; stroke: transparent;`\n  );\n  selectionDiv.setAttribute(\n    'style',\n    `position: absolute; width: ${dragCornerBoxSize}px; height: ${dragCornerBoxSize}px; top: 0px; left: 0px; cursor: all-scroll; background: transparent; stroke: transparent;`\n  );\n\n  containerDiv.appendChild(exportCanvas);\n  containerDiv.appendChild(imageCanvas);\n  containerDiv.appendChild(cropCanvas);\n  containerDiv.appendChild(selectionDiv);\n  containerDiv.appendChild(bottomLeftCornerDiv);\n  containerDiv.appendChild(bottomRightCornerDiv);\n  containerDiv.appendChild(topRightCornerDiv);\n  containerDiv.appendChild(topLeftCornerDiv);\n\n  return {\n    exportCanvas,\n    imageCanvas,\n    cropCanvas,\n    selectionDiv,\n    bottomRightCornerDiv,\n    bottomLeftCornerDiv,\n    topLeftCornerDiv,\n    topRightCornerDiv,\n    imageDiv,\n    containerDiv,\n  };\n};\n","import createContainer from './create-container';\n\n/**\n * Argument for getting the image for specific need\n */\ninterface GetImageArgument {\n  /**\n   * type of image data to return dataURL or blob default if blob\n   */\n  dataType: 'dataURL' | 'blob';\n  /**\n   * return image type jpeg or png format\n   */\n  imageType?: 'image/jpeg' | 'image/png';\n  /**\n   * The image quality of the returned image range from 0-1\n   */\n  imageQuality?: number;\n}\n\ninterface ImageMeta {\n  width: number;\n  height: number;\n  mime?: string;\n}\n\ntype ImageDataType = string | Blob | null;\n\n/**\n * This is the options\n */\ninterface Options {\n  /**\n   * Id of the html div where the cropper will be placed\n   */\n  id: string;\n  /**\n   * Image url or base64 image url\n   * NOTE: If rendered image from other domain exporting from canvas will give error\n   */\n  imageURL?: string;\n  /**\n   * The color of the portion outside the image cropper\n   * default: rgba(0, 0, 0, 0.5)\n   */\n  cropMaskColor?: string;\n  /**\n   * Color of the corner part\n   * default: green\n   */\n  cropCornerColor?: string;\n  /**\n   * Line width of the corner cropper indicator\n   * default 5\n   */\n  cropCornerLineWidth?: number;\n  /**\n   * Sensible sqare portion for resizing at each corner\n   * default: 20\n   */\n  dragCornerBoxSize?: number;\n  /**\n   * The callback (cb) function is to get the image dataURL/blob according to the image type specified in option in realtime\n   * this function will be called every time the resize and other update in the image is called\n   * with the dataURL/blob as a string parameter\n   */\n  cropImageWatcher?: {\n    imgArg?: GetImageArgument;\n    cb?: (imageData: ImageDataType, imageMeta: ImageMeta) => unknown;\n  };\n  /**\n   * default is  1000 if greater than zero this will check for resize of the container after every given duration (millisecond) set by this attribute\n   * set 0 to deactivate\n   * NOTE: if this is set call function stopContainerResizeCheck() from return object otherwise there may be a memory leak\n   */\n  checkForContainerResizeMS?: number;\n}\n\ninterface ReturnType {\n  /**\n   * the callback function (cb) will get the image dataURL/blob of the current status of the image according to the argument provided\n   */\n  getImage: (\n    cb: (imageData: ImageDataType, imageMeta: ImageMeta) => unknown,\n    imgArgs?: GetImageArgument\n  ) => unknown;\n  /**\n   * Dynamically change the image to be cropped\n   */\n  setImageURL: (imageURL: string) => void;\n  /**\n   * If checkForContainerResizeMS is set to a value and this resizer need to be destroyed call this function to avoid memory leak\n   */\n  stopResizeCheck: () => void;\n}\n\n/**\n * This is the main function\n */\nexport default (options: Options): ReturnType => {\n  const dragCornerBoxSize = options.dragCornerBoxSize || 20;\n  const cropImageWatcher = options.cropImageWatcher;\n  const cropMaskColor = options.cropMaskColor || 'rgba(0, 0, 0, 0.5)';\n  const cropCornerColor = options.cropCornerColor || 'green';\n  const cropCornerLineWidth = options.cropCornerLineWidth || 5;\n  const checkForContainerResizeMS =\n    options.checkForContainerResizeMS === undefined\n      ? 1000\n      : options.checkForContainerResizeMS;\n\n  const {\n    imageDiv,\n    exportCanvas,\n    imageCanvas,\n    cropCanvas,\n    selectionDiv,\n    bottomRightCornerDiv,\n    bottomLeftCornerDiv,\n    topLeftCornerDiv,\n    topRightCornerDiv,\n    containerDiv,\n  } = createContainer(options.id, dragCornerBoxSize);\n\n  const imageCanvasCtx = imageCanvas.getContext('2d');\n  if (!imageCanvasCtx) {\n    throw Error('Not able to create canvas');\n  }\n  const cropCanvasCtx = cropCanvas.getContext('2d');\n  if (!cropCanvasCtx) {\n    throw Error('Not able to create canvas');\n  }\n  const exportCanvasCtx = exportCanvas.getContext('2d');\n  if (!exportCanvasCtx) {\n    throw Error('Not able to create canvas');\n  }\n  let drawExportCanvas: () => void;\n  let dragTopLeft = false;\n  let dragBottomLeft = false;\n  let dragTopRight = false;\n  let dragBottomRight = false;\n  let dragBox = false;\n  const image = new Image();\n  let checkResizeFunction: number;\n  if (options.imageURL) image.src = options.imageURL;\n  // image.crossOrigin = 'anonymous';\n\n  const getImageData = async (\n    cb: (data: ImageDataType, imageMeta: ImageMeta) => unknown,\n    args: GetImageArgument = {\n      dataType: 'dataURL',\n      imageType: 'image/jpeg',\n      imageQuality: 1,\n    }\n  ) => {\n    const imageMeta: ImageMeta = {\n      width: exportCanvas.width,\n      height: exportCanvas.height,\n      mime: args.imageType,\n    };\n    if (args.dataType === 'blob') {\n      return exportCanvas.toBlob(\n        data => {\n          cb(data, imageMeta);\n        },\n        args.imageType,\n        args.imageQuality\n      );\n    } else {\n      cb(exportCanvas.toDataURL(args.imageType, args.imageQuality), imageMeta);\n    }\n  };\n\n  image.onload = () => {\n    const imgDivWidth = imageDiv.clientWidth;\n    let expectedHeight = image.height * (imgDivWidth / image.width);\n    if (expectedHeight > image.height) {\n      expectedHeight = image.height;\n    }\n    containerDiv.style.height = expectedHeight + 'px';\n    imageCanvas.width = image.width;\n    imageCanvas.height = image.height;\n    cropCanvas.width = imageCanvas.clientWidth;\n    cropCanvas.height = imageCanvas.clientHeight;\n    cropCanvas.addEventListener('mouseup', mouseUp, false);\n    cropCanvas.addEventListener('mousemove', mouseMove, false);\n    imageCanvasCtx.drawImage(image, 0, 0);\n    bottomLeftCornerDiv.addEventListener(\n      'mousedown',\n      () => {\n        dragBottomLeft = true;\n      },\n      false\n    );\n    bottomLeftCornerDiv.addEventListener('mouseup', mouseUp, false);\n    bottomLeftCornerDiv.addEventListener('mousemove', mouseMove, false);\n    topLeftCornerDiv.addEventListener(\n      'mousedown',\n      () => {\n        dragTopLeft = true;\n      },\n      false\n    );\n    topLeftCornerDiv.addEventListener('mouseup', mouseUp, false);\n    topLeftCornerDiv.addEventListener('mousemove', mouseMove, false);\n    topRightCornerDiv.addEventListener(\n      'mousedown',\n      () => {\n        dragTopRight = true;\n      },\n      false\n    );\n    topRightCornerDiv.addEventListener('mouseup', mouseUp, false);\n    topRightCornerDiv.addEventListener('mousemove', mouseMove, false);\n    bottomRightCornerDiv.addEventListener(\n      'mousedown',\n      () => {\n        dragBottomRight = true;\n      },\n      false\n    );\n    bottomRightCornerDiv.addEventListener('mouseup', mouseUp, false);\n    bottomRightCornerDiv.addEventListener('mousemove', mouseMove, false);\n    selectionDiv.addEventListener(\n      'mousedown',\n      () => {\n        dragBox = true;\n      },\n      false\n    );\n    selectionDiv.addEventListener('mouseup', mouseUp, false);\n    selectionDiv.addEventListener('mousemove', mouseMove, false);\n\n    const selection = {\n      x: 0,\n      y: 0,\n      w: imageCanvas.clientWidth,\n      h: imageCanvas.clientHeight,\n    };\n\n    let preResizeState = {\n      canvasWidth: imageCanvas.clientWidth,\n      canvasHeight: imageCanvas.clientHeight,\n      ...selection,\n    };\n\n    // to avoide memory leak\n    if (checkResizeFunction) {\n      clearInterval(checkResizeFunction);\n    }\n\n    if (checkForContainerResizeMS > 0) {\n      checkResizeFunction = window.setInterval(() => {\n        const newWidth = imageCanvas.offsetWidth;\n        const newHeight = imageCanvas.offsetHeight;\n        if (\n          preResizeState.canvasHeight != newHeight ||\n          preResizeState.canvasWidth != newWidth\n        ) {\n          const xScale =\n            preResizeState.canvasWidth > 0\n              ? newWidth / preResizeState.canvasWidth\n              : 0;\n          const yScale =\n            preResizeState.canvasHeight > 0\n              ? newHeight / preResizeState.canvasHeight\n              : 0;\n\n          preResizeState = {\n            ...selection,\n            canvasHeight: newHeight,\n            canvasWidth: newWidth,\n          };\n          cropCanvas.width = newWidth;\n          cropCanvas.height = newHeight;\n          selection.w = (selection.w > 0 ? selection.w : 1) * xScale;\n          selection.h = (selection.h > 0 ? selection.h : 1) * yScale;\n          draw();\n        }\n      }, checkForContainerResizeMS);\n    }\n\n    drawExportCanvas = async () => {\n      const scaleX = image.width / cropCanvas.width;\n      const scaleY = image.height / cropCanvas.height;\n      const x = selection.x * scaleX;\n      const y = selection.y * scaleY;\n      const width = selection.w * scaleX;\n      const height = selection.h * scaleY;\n      exportCanvas.width = width;\n      exportCanvas.height = height;\n      exportCanvasCtx.drawImage(\n        image,\n        x,\n        y,\n        width,\n        height,\n        0,\n        0,\n        width,\n        height\n      );\n      if (cropImageWatcher && cropImageWatcher.cb) {\n        getImageData(cropImageWatcher.cb, cropImageWatcher.imgArg);\n      }\n    };\n\n    function mouseUp() {\n      dragTopLeft = dragTopRight = dragBottomLeft = dragBottomRight = dragBox = false;\n    }\n\n    let mousePrevX = 0;\n    let mousePrevY = 0;\n    let previousX = 0;\n    let previousY = 0;\n\n    function mouseMove(e: MouseEvent) {\n      if (!imageDiv) {\n        throw Error('Not able to create canvas');\n      }\n      let canvasRect = cropCanvas.getBoundingClientRect();\n      let mouseX = e.clientX - canvasRect.x;\n      let mouseY = e.clientY - canvasRect.y;\n      let isDraw = false;\n      if (dragTopLeft) {\n        selection.w += selection.x - mouseX;\n        selection.h += selection.y - mouseY;\n        selection.x = mouseX;\n        selection.y = mouseY;\n        isDraw = true;\n      } else if (dragTopRight) {\n        selection.w = Math.abs(selection.x - mouseX);\n        selection.h += selection.y - mouseY;\n        selection.y = mouseY;\n        isDraw = true;\n      } else if (dragBottomLeft) {\n        selection.w += selection.x - mouseX;\n        selection.h = Math.abs(selection.y - mouseY);\n        selection.x = mouseX;\n        isDraw = true;\n      } else if (dragBottomRight) {\n        selection.w = Math.abs(selection.x - mouseX);\n        selection.h = Math.abs(selection.y - mouseY);\n        isDraw = true;\n      } else if (dragBox) {\n        selection.x += mouseX - mousePrevX;\n        selection.y += mouseY - mousePrevY;\n        isDraw = true;\n      }\n      if (isDraw) {\n        if (selection.w < 2 * dragCornerBoxSize) {\n          selection.w = 2 * dragCornerBoxSize;\n          selection.x = previousX;\n        }\n        if (selection.h < 2 * dragCornerBoxSize) {\n          selection.h = 2 * dragCornerBoxSize;\n          selection.y = previousY;\n        }\n        if (selection.x < 0) {\n          selection.x = 0;\n        }\n        if (selection.x + selection.w > cropCanvas.width) {\n          selection.x = cropCanvas.width - selection.w;\n        }\n        if (selection.y < 0) {\n          selection.y = 0;\n        }\n        if (selection.y + selection.h > cropCanvas.height) {\n          selection.y = cropCanvas.height - selection.h;\n        }\n        draw();\n      }\n      mousePrevX = mouseX;\n      mousePrevY = mouseY;\n      previousX = selection.x;\n      previousY = selection.y;\n    }\n\n    function draw() {\n      if (!cropCanvasCtx) {\n        throw Error('Not able to create canvas');\n      }\n      cropCanvasCtx.clearRect(0, 0, cropCanvas.width, cropCanvas.height);\n      cropCanvasCtx.fillStyle = cropMaskColor;\n      cropCanvasCtx.strokeStyle = cropCornerColor;\n      cropCanvasCtx.lineWidth = cropCornerLineWidth;\n      cropCanvasCtx.fillRect(0, 0, cropCanvas.width, cropCanvas.height);\n      cropCanvasCtx.clearRect(\n        selection.x,\n        selection.y,\n        selection.w,\n        selection.h\n      );\n      cropCanvasCtx.beginPath();\n      cropCanvasCtx.moveTo(selection.x, selection.y + dragCornerBoxSize);\n      cropCanvasCtx.lineTo(selection.x, selection.y);\n      cropCanvasCtx.lineTo(selection.x + dragCornerBoxSize, selection.y);\n      cropCanvasCtx.moveTo(\n        selection.x + selection.w - dragCornerBoxSize,\n        selection.y\n      );\n      cropCanvasCtx.lineTo(selection.x + selection.w, selection.y);\n      cropCanvasCtx.lineTo(\n        selection.x + selection.w,\n        selection.y + dragCornerBoxSize\n      );\n      cropCanvasCtx.moveTo(\n        selection.x + selection.w,\n        selection.y + selection.h - dragCornerBoxSize\n      );\n      cropCanvasCtx.lineTo(\n        selection.x + selection.w,\n        selection.y + selection.h\n      );\n      cropCanvasCtx.lineTo(\n        selection.x + selection.w - dragCornerBoxSize,\n        selection.y + selection.h\n      );\n      cropCanvasCtx.moveTo(\n        selection.x + dragCornerBoxSize,\n        selection.y + selection.h\n      );\n      cropCanvasCtx.lineTo(selection.x, selection.y + selection.h);\n      cropCanvasCtx.lineTo(\n        selection.x,\n        selection.y + selection.h - dragCornerBoxSize\n      );\n      cropCanvasCtx.stroke();\n      topLeftCornerDiv.style.top = topRightCornerDiv.style.top =\n        selection.y + 'px';\n      topLeftCornerDiv.style.left = bottomLeftCornerDiv.style.left =\n        selection.x + 'px';\n      topRightCornerDiv.style.left = bottomRightCornerDiv.style.left =\n        selection.x + selection.w - dragCornerBoxSize + 'px';\n      bottomLeftCornerDiv.style.top = bottomRightCornerDiv.style.top =\n        selection.y + selection.h - dragCornerBoxSize + 'px';\n      selectionDiv.style.top = selection.y + 'px';\n      selectionDiv.style.left = selection.x + 'px';\n      selectionDiv.style.width = selection.w + 'px';\n      selectionDiv.style.height = selection.h + 'px';\n      drawExportCanvas();\n    }\n\n    draw();\n  };\n\n  return {\n    getImage: async (\n      cb: (imageData: ImageDataType, imageMeta: ImageMeta) => unknown,\n      imgArgs?: GetImageArgument\n    ) => {\n      getImageData(cb, imgArgs);\n    },\n    setImageURL: (imageURL: string) => {\n      image.src = imageURL;\n    },\n    stopResizeCheck: () => {\n      clearInterval(checkResizeFunction);\n    },\n  };\n};\n"],"sourceRoot":""}